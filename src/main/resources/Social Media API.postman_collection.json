{
	"info": {
		"_postman_id": "a1799c99-5b81-4dab-9a33-45333ed65a1b",
		"name": "Social Media API",
		"description": "Collection for testing the Social Media RESTful API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "24949621"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains user ID\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.username).to.equal(\"testuser\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "testuser",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password123",
							"type": "text"
						}
					]
				},
				"url": "http://localhost:8080/users"
			},
			"response": []
		},
		{
			"name": "Follow User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "followId",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": "http://localhost:8080/users/2/follow"
			},
			"response": []
		},
		{
			"name": "Get User Followers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Followers contain valid user data\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    if (jsonData.length > 0) {\r",
							"        pm.expect(jsonData[0]).to.have.property(\"id\");\r",
							"        pm.expect(jsonData[0]).to.have.property(\"username\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/users/1/followers"
			},
			"response": []
		},
		{
			"name": "Get User Following",
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/users/1/following"
			},
			"response": []
		},
		{
			"name": "Fetch Posts by Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Posts contain valid data\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    if (jsonData.length > 0) {\r",
							"        pm.expect(jsonData[0]).to.have.property(\"id\");\r",
							"        pm.expect(jsonData[0]).to.have.property(\"title\");\r",
							"        pm.expect(jsonData[0]).to.have.property(\"body\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/posts/user/1"
			},
			"response": []
		},
		{
			"name": "Like a Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": "http://localhost:8080/posts/2/like"
			},
			"response": []
		},
		{
			"name": "Fetch Liked Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Liked posts contain valid data\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    if (jsonData.length > 0) {\r",
							"        pm.expect(jsonData[0]).to.have.property(\"id\");\r",
							"        pm.expect(jsonData[0]).to.have.property(\"title\");\r",
							"        pm.expect(jsonData[0]).to.have.property(\"body\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/users/1/liked-posts"
			},
			"response": []
		}
	]
}